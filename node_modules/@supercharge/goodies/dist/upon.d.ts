/**
 * Calls the given `callback` function with the given `value` and returns
 * the result of the callback. It resolves the `value` before passing
 * it to the callback in case it is a Promise.
 *
 * @param {*} value
 * @param {Function} callback
 *
 * @returns {*} value
 *
 * @example
 * const email = await upon(User.findById(1), async user => {
 *   return user.email
 * })
 */
export declare function upon<T, R>(value: Promise<T>, callback: (value: T) => Promise<R>): Promise<R>;
export declare function upon<T, R>(value: Promise<T>, callback: (value: T) => R): Promise<R>;
export declare function upon<T, R>(value: T, callback: (value: T) => Promise<R>): Promise<R>;
export declare function upon<T, R>(value: T, callback: (value: T) => R): R;
